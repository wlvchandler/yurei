#include <filesystem>
#include <j16/assembler.h>
#include <j16/j16.h>

using namespace std;
using namespace oni16;


uint16_t ROMtest[] = { 0xffef, 0x0000, 0x000a, 0x00f0, 0x0010, 0x000a, 0x00f1, 0x0020, 0x000c, 0x00f2, 0x00f0, 0x000c,
                       0x00f3, 0x00f1, 0x000b, 0x00f0, 0x0030, 0x000a, 0x00f4, 0x0040, 0x000c, 0x00f5, 0x80f4, 0x000d,
                       0x00f2, 0x000e, 0x00f5, 0x0010, 0x00f0, 0x00f3, 0x0011, 0x00f2, 0x00f0, 0x0012, 0x00f0, 0x00f3,
                       0x0013, 0x00f1, 0x00f4, 0x0014, 0x00f0, 0x00f2, 0x0015, 0x00f1, 0x00f5, 0x0020, 0x00f0, 0x00f2,
                       0x0021, 0x00f1, 0x00f3, 0x0022, 0x00f2, 0x00f4, 0x0023, 0x00f3, 0x0024, 0x00f0, 0x0025, 0x00f1,
                       0x0030, 0x0045, 0x0031, 0x0045, 0x0032, 0x0045, 0x0033, 0x0045, 0x0034, 0x0045, 0x0040, 0x0048,
                       0x0001, 0x000a, 0x00f6, 0x0050, 0x000a, 0x00f7, 0x0060, 0x000a, 0x00f8, 0x0070, 0x0041, 0x0000,
                       0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 };

int main(int argc, char** argv) {

    try {
        std::vector<std::string> args(argv + 1, argv + argc);
        oni16::parseOptions(args);

        // std::filesystem::path cwd = std::filesystem::current_path();
        // std::filesystem::path filePath = cwd / oni16_options.inputFile;

        Assembler().assemble();
    } catch (std::runtime_error& e) {
        std::cerr << e.what() << std::endl;
    }
    return 0;
}